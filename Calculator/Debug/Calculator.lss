
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cb6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000042  00800060  00000cb6  00000d2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000d6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001438  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000120  00000000  00000000  000014c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000106d  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000519  00000000  00000000  0000264d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008f3  00000000  00000000  00002b66  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000268  00000000  00000000  0000345c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000357  00000000  00000000  000036c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b75  00000000  00000000  00003a1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3a       	cpi	r26, 0xA2	; 162
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 ea       	ldi	r26, 0xA2	; 162
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 3a       	cpi	r26, 0xA2	; 162
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 00 01 	call	0x200	; 0x200 <main>
  8a:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <charArrayToInt>:
	int i, value, r, flag;
	
	//flag = 1; for -ve numbers
	i = value = 0;
	
	for(i=0; i<n; i++)
  92:	70 e0       	ldi	r23, 0x00	; 0
  94:	16 16       	cp	r1, r22
  96:	17 06       	cpc	r1, r23
  98:	ec f4       	brge	.+58     	; 0xd4 <charArrayToInt+0x42>
  9a:	e8 2f       	mov	r30, r24
  9c:	f9 2f       	mov	r31, r25
int charArrayToInt(char *arr, char n)
{
	int i, value, r, flag;
	
	//flag = 1; for -ve numbers
	i = value = 0;
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	90 e0       	ldi	r25, 0x00	; 0
	
	for(i=0; i<n; i++)
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	50 e0       	ldi	r21, 0x00	; 0
		 {
			 flag = -1;
			 continue;
		 }
		 */
		r = arr[i] - '0';
  a6:	a1 91       	ld	r26, Z+
		value = value * 10 + r; //increase a zero in the right then add the value
  a8:	9c 01       	movw	r18, r24
  aa:	22 0f       	add	r18, r18
  ac:	33 1f       	adc	r19, r19
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	28 0f       	add	r18, r24
  bc:	39 1f       	adc	r19, r25
		 {
			 flag = -1;
			 continue;
		 }
		 */
		r = arr[i] - '0';
  be:	8a 2f       	mov	r24, r26
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	c0 97       	sbiw	r24, 0x30	; 48
		value = value * 10 + r; //increase a zero in the right then add the value
  c4:	82 0f       	add	r24, r18
  c6:	93 1f       	adc	r25, r19
	int i, value, r, flag;
	
	//flag = 1; for -ve numbers
	i = value = 0;
	
	for(i=0; i<n; i++)
  c8:	4f 5f       	subi	r20, 0xFF	; 255
  ca:	5f 4f       	sbci	r21, 0xFF	; 255
  cc:	46 17       	cp	r20, r22
  ce:	57 07       	cpc	r21, r23
  d0:	54 f3       	brlt	.-44     	; 0xa6 <charArrayToInt+0x14>
  d2:	08 95       	ret
int charArrayToInt(char *arr, char n)
{
	int i, value, r, flag;
	
	//flag = 1; for -ve numbers
	i = value = 0;
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
	
	//value = value * flag; // for -ve ops
	
	return value;
	
}
  d8:	08 95       	ret

000000da <readOperand>:
	LCD_vSend_string("Bye Bye !");
}	


int readOperand(char *operand, char n, char *op)
{
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	1f 93       	push	r17
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	ec 01       	movw	r28, r24
  e6:	16 2f       	mov	r17, r22
  e8:	7a 01       	movw	r14, r20
	char inp='0xFF';
	while(1)
	{
		do
		{
			inp=keypad_u8read();
  ea:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <keypad_u8read>
		} while(inp==0xFF);
  ee:	8f 3f       	cpi	r24, 0xFF	; 255
  f0:	e1 f3       	breq	.-8      	; 0xea <readOperand+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f2:	e3 e2       	ldi	r30, 0x23	; 35
  f4:	f4 ef       	ldi	r31, 0xF4	; 244
  f6:	31 97       	sbiw	r30, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <readOperand+0x1c>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <readOperand+0x22>
  fc:	00 00       	nop
		_delay_ms(250);
		if(inp<='9' && inp>='0')
  fe:	98 2f       	mov	r25, r24
 100:	90 53       	subi	r25, 0x30	; 48
 102:	9a 30       	cpi	r25, 0x0A	; 10
 104:	28 f4       	brcc	.+10     	; 0x110 <readOperand+0x36>
		{
			(*operand) = inp;
 106:	89 93       	st	Y+, r24
			LCD_vSend_char(*operand);
 108:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
		{
			(*op) = inp;
			break;
		}
		operand++;
		n++;
 10c:	1f 5f       	subi	r17, 0xFF	; 255
	}
 10e:	ed cf       	rjmp	.-38     	; 0xea <readOperand+0x10>
			(*operand) = inp;
			LCD_vSend_char(*operand);
		}
		else
		{
			(*op) = inp;
 110:	f7 01       	movw	r30, r14
 112:	80 83       	st	Z, r24
		}
		operand++;
		n++;
	}
	operand = operand-n;
	int value = charArrayToInt(operand,n);
 114:	ce 01       	movw	r24, r28
 116:	81 1b       	sub	r24, r17
 118:	91 09       	sbc	r25, r1
 11a:	61 2f       	mov	r22, r17
 11c:	0e 94 49 00 	call	0x92	; 0x92 <charArrayToInt>
	return value;
}
 120:	df 91       	pop	r29
 122:	cf 91       	pop	r28
 124:	1f 91       	pop	r17
 126:	ff 90       	pop	r15
 128:	ef 90       	pop	r14
 12a:	08 95       	ret

0000012c <operandtoInteger>:

int operandtoInteger(char *operand, char n)
{
	int returnval=0;
	char i=0;
	for(i=0;i<n;i++)
 12c:	66 23       	and	r22, r22
 12e:	c9 f0       	breq	.+50     	; 0x162 <operandtoInteger+0x36>
 130:	e8 2f       	mov	r30, r24
 132:	f9 2f       	mov	r31, r25
 134:	40 e0       	ldi	r20, 0x00	; 0
	
}

int operandtoInteger(char *operand, char n)
{
	int returnval=0;
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	90 e0       	ldi	r25, 0x00	; 0
	char i=0;
	for(i=0;i<n;i++)
	{
		returnval = returnval*10 + ((*(operand+i))-'0');
 13a:	9c 01       	movw	r18, r24
 13c:	22 0f       	add	r18, r18
 13e:	33 1f       	adc	r19, r19
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	28 0f       	add	r18, r24
 14e:	39 1f       	adc	r19, r25
 150:	81 91       	ld	r24, Z+
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	c0 97       	sbiw	r24, 0x30	; 48
 156:	82 0f       	add	r24, r18
 158:	93 1f       	adc	r25, r19

int operandtoInteger(char *operand, char n)
{
	int returnval=0;
	char i=0;
	for(i=0;i<n;i++)
 15a:	4f 5f       	subi	r20, 0xFF	; 255
 15c:	46 17       	cp	r20, r22
 15e:	69 f7       	brne	.-38     	; 0x13a <operandtoInteger+0xe>
 160:	08 95       	ret
	
}

int operandtoInteger(char *operand, char n)
{
	int returnval=0;
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
	for(i=0;i<n;i++)
	{
		returnval = returnval*10 + ((*(operand+i))-'0');
	}
	return returnval;
}
 166:	08 95       	ret

00000168 <printInt>:


void printInt(int z)
{
 168:	0f 93       	push	r16
 16a:	1f 93       	push	r17
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	ec 01       	movw	r28, r24
	LCD_vSend_char(z/1000 + 48);
 172:	68 ee       	ldi	r22, 0xE8	; 232
 174:	73 e0       	ldi	r23, 0x03	; 3
 176:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 17a:	86 2f       	mov	r24, r22
 17c:	80 5d       	subi	r24, 0xD0	; 208
 17e:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
	LCD_vSend_char(((z/100)%10)+48);
 182:	ce 01       	movw	r24, r28
 184:	64 e6       	ldi	r22, 0x64	; 100
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 18c:	cb 01       	movw	r24, r22
 18e:	0a e0       	ldi	r16, 0x0A	; 10
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	b8 01       	movw	r22, r16
 194:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 198:	80 5d       	subi	r24, 0xD0	; 208
 19a:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
	LCD_vSend_char(((z/10)%10)+48);
 19e:	ce 01       	movw	r24, r28
 1a0:	b8 01       	movw	r22, r16
 1a2:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 1a6:	c8 2f       	mov	r28, r24
 1a8:	cb 01       	movw	r24, r22
 1aa:	b8 01       	movw	r22, r16
 1ac:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 1b0:	80 5d       	subi	r24, 0xD0	; 208
 1b2:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
	LCD_vSend_char((z%10) + 48);
 1b6:	8c 2f       	mov	r24, r28
 1b8:	80 5d       	subi	r24, 0xD0	; 208
 1ba:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
}
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	08 95       	ret

000001c8 <calcResult>:

int calcResult(int x, int y, char op)
{
	if(op=='+')
 1c8:	4b 32       	cpi	r20, 0x2B	; 43
 1ca:	21 f4       	brne	.+8      	; 0x1d4 <calcResult+0xc>
	{
		return x+y;
 1cc:	9c 01       	movw	r18, r24
 1ce:	26 0f       	add	r18, r22
 1d0:	37 1f       	adc	r19, r23
 1d2:	13 c0       	rjmp	.+38     	; 0x1fa <calcResult+0x32>
	}
	else if(op=='-')
 1d4:	4d 32       	cpi	r20, 0x2D	; 45
 1d6:	21 f4       	brne	.+8      	; 0x1e0 <calcResult+0x18>
	{
		return x-y;
 1d8:	9c 01       	movw	r18, r24
 1da:	26 1b       	sub	r18, r22
 1dc:	37 0b       	sbc	r19, r23
 1de:	0d c0       	rjmp	.+26     	; 0x1fa <calcResult+0x32>
	}
	else if(op=='x')
 1e0:	48 37       	cpi	r20, 0x78	; 120
 1e2:	41 f4       	brne	.+16     	; 0x1f4 <calcResult+0x2c>
	{
		return x*y;
 1e4:	86 9f       	mul	r24, r22
 1e6:	90 01       	movw	r18, r0
 1e8:	87 9f       	mul	r24, r23
 1ea:	30 0d       	add	r19, r0
 1ec:	96 9f       	mul	r25, r22
 1ee:	30 0d       	add	r19, r0
 1f0:	11 24       	eor	r1, r1
 1f2:	03 c0       	rjmp	.+6      	; 0x1fa <calcResult+0x32>
	}
	else if(op='/')
	{
		return x/y;
 1f4:	0e 94 32 06 	call	0xc64	; 0xc64 <__divmodhi4>
 1f8:	9b 01       	movw	r18, r22
	}
	else
	{
		LCD_clearscreen();
	}
}
 1fa:	82 2f       	mov	r24, r18
 1fc:	93 2f       	mov	r25, r19
 1fe:	08 95       	ret

00000200 <main>:
int calcResult(int x, int y, char op);
void printInt(int z);
int readOperand(char *operand, char n, char *op);

int main(void)
{
 200:	0f 93       	push	r16
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
	LCD_vInit();
 208:	0e 94 71 05 	call	0xae2	; 0xae2 <LCD_vInit>
	keypad_vInit();
 20c:	0e 94 c8 04 	call	0x990	; 0x990 <keypad_vInit>
	LCD_vSend_string("Hello, World");
 210:	80 e6       	ldi	r24, 0x60	; 96
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 05 06 	call	0xc0a	; 0xc0a <LCD_vSend_string>
 218:	8f e9       	ldi	r24, 0x9F	; 159
 21a:	96 e8       	ldi	r25, 0x86	; 134
 21c:	a1 e0       	ldi	r26, 0x01	; 1
 21e:	81 50       	subi	r24, 0x01	; 1
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	a0 40       	sbci	r26, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0x1e>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x28>
 228:	00 00       	nop
	_delay_ms(500);
	LCD_clearscreen();
 22a:	0e 94 14 06 	call	0xc28	; 0xc28 <LCD_clearscreen>
	int result;
    while(1)
    {
        //TODO:: Please write your application code 
		label:
		(*x) = readOperand(operand1,n,op);
 22e:	c0 e0       	ldi	r28, 0x00	; 0
 230:	d6 e0       	ldi	r29, 0x06	; 6
			LCD_clearscreen; 
			goto label;
		}			
		LCD_vSend_char((*op));
		
		(*y)=readOperand(operand2,m,f);
 232:	04 e0       	ldi	r16, 0x04	; 4
 234:	16 e0       	ldi	r17, 0x06	; 6
	int result;
    while(1)
    {
        //TODO:: Please write your application code 
		label:
		(*x) = readOperand(operand1,n,op);
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	98 e0       	ldi	r25, 0x08	; 8
 23a:	60 e0       	ldi	r22, 0x00	; 0
 23c:	40 e5       	ldi	r20, 0x50	; 80
 23e:	56 e0       	ldi	r21, 0x06	; 6
 240:	0e 94 6d 00 	call	0xda	; 0xda <readOperand>
 244:	99 83       	std	Y+1, r25	; 0x01
 246:	88 83       	st	Y, r24
		if(op=='A')
		{
			LCD_clearscreen; 
			goto label;
		}			
		LCD_vSend_char((*op));
 248:	80 91 50 06 	lds	r24, 0x0650
 24c:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
		
		(*y)=readOperand(operand2,m,f);
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	97 e0       	ldi	r25, 0x07	; 7
 254:	60 e0       	ldi	r22, 0x00	; 0
 256:	44 e5       	ldi	r20, 0x54	; 84
 258:	56 e0       	ldi	r21, 0x06	; 6
 25a:	0e 94 6d 00 	call	0xda	; 0xda <readOperand>
 25e:	d8 01       	movw	r26, r16
 260:	11 96       	adiw	r26, 0x01	; 1
 262:	9c 93       	st	X, r25
 264:	8e 93       	st	-X, r24
		
		if((*f)=='=')
 266:	80 91 54 06 	lds	r24, 0x0654
 26a:	8d 33       	cpi	r24, 0x3D	; 61
 26c:	b9 f4       	brne	.+46     	; 0x29c <main+0x9c>
		{
			LCD_movecursor(2,13);
 26e:	82 e0       	ldi	r24, 0x02	; 2
 270:	6d e0       	ldi	r22, 0x0D	; 13
 272:	0e 94 1e 06 	call	0xc3c	; 0xc3c <LCD_movecursor>
			result = calcResult((*x),(*y),(*op));
 276:	60 91 04 06 	lds	r22, 0x0604
 27a:	70 91 05 06 	lds	r23, 0x0605
 27e:	80 91 00 06 	lds	r24, 0x0600
 282:	90 91 01 06 	lds	r25, 0x0601
 286:	40 91 50 06 	lds	r20, 0x0650
 28a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <calcResult>
			printInt(result);
 28e:	0e 94 b4 00 	call	0x168	; 0x168 <printInt>
			while(keypad_u8read()==0xFF);
 292:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <keypad_u8read>
 296:	8f 3f       	cpi	r24, 0xFF	; 255
 298:	e1 f3       	breq	.-8      	; 0x292 <main+0x92>
 29a:	1c c0       	rjmp	.+56     	; 0x2d4 <main+0xd4>
			break;
		}
		else if((*f)=='A')
 29c:	81 34       	cpi	r24, 0x41	; 65
 29e:	19 f4       	brne	.+6      	; 0x2a6 <main+0xa6>
		{
			LCD_clearscreen();
 2a0:	0e 94 14 06 	call	0xc28	; 0xc28 <LCD_clearscreen>
			goto label;
 2a4:	c8 cf       	rjmp	.-112    	; 0x236 <main+0x36>
		}
		else
		{
			LCD_clearscreen();
 2a6:	0e 94 14 06 	call	0xc28	; 0xc28 <LCD_clearscreen>
			LCD_vSend_string("Only 2 Operands");
 2aa:	8d e6       	ldi	r24, 0x6D	; 109
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 05 06 	call	0xc0a	; 0xc0a <LCD_vSend_string>
			LCD_movecursor(2,1);
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	0e 94 1e 06 	call	0xc3c	; 0xc3c <LCD_movecursor>
			LCD_vSend_string("Allowed !!");
 2ba:	8d e7       	ldi	r24, 0x7D	; 125
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 05 06 	call	0xc0a	; 0xc0a <LCD_vSend_string>
 2c2:	8f ed       	ldi	r24, 0xDF	; 223
 2c4:	93 e9       	ldi	r25, 0x93	; 147
 2c6:	a4 e0       	ldi	r26, 0x04	; 4
 2c8:	81 50       	subi	r24, 0x01	; 1
 2ca:	90 40       	sbci	r25, 0x00	; 0
 2cc:	a0 40       	sbci	r26, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0xc8>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0xd2>
 2d2:	00 00       	nop
			_delay_ms(1500);
			break;
		}
	}
	LCD_clearscreen();
 2d4:	0e 94 14 06 	call	0xc28	; 0xc28 <LCD_clearscreen>
	LCD_vSend_string("Bye Bye !");
 2d8:	88 e8       	ldi	r24, 0x88	; 136
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 05 06 	call	0xc0a	; 0xc0a <LCD_vSend_string>
}	
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	1f 91       	pop	r17
 2ea:	0f 91       	pop	r16
 2ec:	08 95       	ret

000002ee <DIO_vSetPinDir>:
 2ee:	84 34       	cpi	r24, 0x44	; 68
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <DIO_vSetPinDir+0x6>
 2f2:	71 c0       	rjmp	.+226    	; 0x3d6 <DIO_vSetPinDir+0xe8>
 2f4:	85 34       	cpi	r24, 0x45	; 69
 2f6:	48 f4       	brcc	.+18     	; 0x30a <DIO_vSetPinDir+0x1c>
 2f8:	82 34       	cpi	r24, 0x42	; 66
 2fa:	99 f1       	breq	.+102    	; 0x362 <DIO_vSetPinDir+0x74>
 2fc:	83 34       	cpi	r24, 0x43	; 67
 2fe:	08 f0       	brcs	.+2      	; 0x302 <DIO_vSetPinDir+0x14>
 300:	4d c0       	rjmp	.+154    	; 0x39c <DIO_vSetPinDir+0xae>
 302:	81 34       	cpi	r24, 0x41	; 65
 304:	09 f0       	breq	.+2      	; 0x308 <DIO_vSetPinDir+0x1a>
 306:	83 c0       	rjmp	.+262    	; 0x40e <DIO_vSetPinDir+0x120>
 308:	0f c0       	rjmp	.+30     	; 0x328 <DIO_vSetPinDir+0x3a>
 30a:	82 36       	cpi	r24, 0x62	; 98
 30c:	51 f1       	breq	.+84     	; 0x362 <DIO_vSetPinDir+0x74>
 30e:	83 36       	cpi	r24, 0x63	; 99
 310:	20 f4       	brcc	.+8      	; 0x31a <DIO_vSetPinDir+0x2c>
 312:	81 36       	cpi	r24, 0x61	; 97
 314:	09 f0       	breq	.+2      	; 0x318 <DIO_vSetPinDir+0x2a>
 316:	7b c0       	rjmp	.+246    	; 0x40e <DIO_vSetPinDir+0x120>
 318:	07 c0       	rjmp	.+14     	; 0x328 <DIO_vSetPinDir+0x3a>
 31a:	83 36       	cpi	r24, 0x63	; 99
 31c:	09 f4       	brne	.+2      	; 0x320 <DIO_vSetPinDir+0x32>
 31e:	3e c0       	rjmp	.+124    	; 0x39c <DIO_vSetPinDir+0xae>
 320:	84 36       	cpi	r24, 0x64	; 100
 322:	09 f0       	breq	.+2      	; 0x326 <DIO_vSetPinDir+0x38>
 324:	74 c0       	rjmp	.+232    	; 0x40e <DIO_vSetPinDir+0x120>
 326:	57 c0       	rjmp	.+174    	; 0x3d6 <DIO_vSetPinDir+0xe8>
 328:	41 30       	cpi	r20, 0x01	; 1
 32a:	69 f4       	brne	.+26     	; 0x346 <DIO_vSetPinDir+0x58>
 32c:	2a b3       	in	r18, 0x1a	; 26
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	ac 01       	movw	r20, r24
 334:	02 c0       	rjmp	.+4      	; 0x33a <DIO_vSetPinDir+0x4c>
 336:	44 0f       	add	r20, r20
 338:	55 1f       	adc	r21, r21
 33a:	6a 95       	dec	r22
 33c:	e2 f7       	brpl	.-8      	; 0x336 <DIO_vSetPinDir+0x48>
 33e:	ba 01       	movw	r22, r20
 340:	62 2b       	or	r22, r18
 342:	6a bb       	out	0x1a, r22	; 26
 344:	08 95       	ret
 346:	2a b3       	in	r18, 0x1a	; 26
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	ac 01       	movw	r20, r24
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_vSetPinDir+0x66>
 350:	44 0f       	add	r20, r20
 352:	55 1f       	adc	r21, r21
 354:	6a 95       	dec	r22
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_vSetPinDir+0x62>
 358:	ba 01       	movw	r22, r20
 35a:	60 95       	com	r22
 35c:	62 23       	and	r22, r18
 35e:	6a bb       	out	0x1a, r22	; 26
 360:	08 95       	ret
 362:	41 30       	cpi	r20, 0x01	; 1
 364:	69 f4       	brne	.+26     	; 0x380 <DIO_vSetPinDir+0x92>
 366:	27 b3       	in	r18, 0x17	; 23
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	ac 01       	movw	r20, r24
 36e:	02 c0       	rjmp	.+4      	; 0x374 <DIO_vSetPinDir+0x86>
 370:	44 0f       	add	r20, r20
 372:	55 1f       	adc	r21, r21
 374:	6a 95       	dec	r22
 376:	e2 f7       	brpl	.-8      	; 0x370 <DIO_vSetPinDir+0x82>
 378:	ba 01       	movw	r22, r20
 37a:	62 2b       	or	r22, r18
 37c:	67 bb       	out	0x17, r22	; 23
 37e:	08 95       	ret
 380:	27 b3       	in	r18, 0x17	; 23
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	ac 01       	movw	r20, r24
 388:	02 c0       	rjmp	.+4      	; 0x38e <DIO_vSetPinDir+0xa0>
 38a:	44 0f       	add	r20, r20
 38c:	55 1f       	adc	r21, r21
 38e:	6a 95       	dec	r22
 390:	e2 f7       	brpl	.-8      	; 0x38a <DIO_vSetPinDir+0x9c>
 392:	ba 01       	movw	r22, r20
 394:	60 95       	com	r22
 396:	62 23       	and	r22, r18
 398:	67 bb       	out	0x17, r22	; 23
 39a:	08 95       	ret
 39c:	41 30       	cpi	r20, 0x01	; 1
 39e:	69 f4       	brne	.+26     	; 0x3ba <DIO_vSetPinDir+0xcc>
 3a0:	24 b3       	in	r18, 0x14	; 20
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	ac 01       	movw	r20, r24
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_vSetPinDir+0xc0>
 3aa:	44 0f       	add	r20, r20
 3ac:	55 1f       	adc	r21, r21
 3ae:	6a 95       	dec	r22
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_vSetPinDir+0xbc>
 3b2:	ba 01       	movw	r22, r20
 3b4:	62 2b       	or	r22, r18
 3b6:	64 bb       	out	0x14, r22	; 20
 3b8:	08 95       	ret
 3ba:	24 b3       	in	r18, 0x14	; 20
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	ac 01       	movw	r20, r24
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <DIO_vSetPinDir+0xda>
 3c4:	44 0f       	add	r20, r20
 3c6:	55 1f       	adc	r21, r21
 3c8:	6a 95       	dec	r22
 3ca:	e2 f7       	brpl	.-8      	; 0x3c4 <DIO_vSetPinDir+0xd6>
 3cc:	ba 01       	movw	r22, r20
 3ce:	60 95       	com	r22
 3d0:	62 23       	and	r22, r18
 3d2:	64 bb       	out	0x14, r22	; 20
 3d4:	08 95       	ret
 3d6:	41 30       	cpi	r20, 0x01	; 1
 3d8:	69 f4       	brne	.+26     	; 0x3f4 <DIO_vSetPinDir+0x106>
 3da:	21 b3       	in	r18, 0x11	; 17
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	ac 01       	movw	r20, r24
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_vSetPinDir+0xfa>
 3e4:	44 0f       	add	r20, r20
 3e6:	55 1f       	adc	r21, r21
 3e8:	6a 95       	dec	r22
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_vSetPinDir+0xf6>
 3ec:	ba 01       	movw	r22, r20
 3ee:	62 2b       	or	r22, r18
 3f0:	61 bb       	out	0x11, r22	; 17
 3f2:	08 95       	ret
 3f4:	21 b3       	in	r18, 0x11	; 17
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	ac 01       	movw	r20, r24
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <DIO_vSetPinDir+0x114>
 3fe:	44 0f       	add	r20, r20
 400:	55 1f       	adc	r21, r21
 402:	6a 95       	dec	r22
 404:	e2 f7       	brpl	.-8      	; 0x3fe <DIO_vSetPinDir+0x110>
 406:	ba 01       	movw	r22, r20
 408:	60 95       	com	r22
 40a:	62 23       	and	r22, r18
 40c:	61 bb       	out	0x11, r22	; 17
 40e:	08 95       	ret

00000410 <DIO_vWrite>:
 410:	84 34       	cpi	r24, 0x44	; 68
 412:	09 f4       	brne	.+2      	; 0x416 <DIO_vWrite+0x6>
 414:	71 c0       	rjmp	.+226    	; 0x4f8 <DIO_vWrite+0xe8>
 416:	85 34       	cpi	r24, 0x45	; 69
 418:	48 f4       	brcc	.+18     	; 0x42c <DIO_vWrite+0x1c>
 41a:	82 34       	cpi	r24, 0x42	; 66
 41c:	99 f1       	breq	.+102    	; 0x484 <DIO_vWrite+0x74>
 41e:	83 34       	cpi	r24, 0x43	; 67
 420:	08 f0       	brcs	.+2      	; 0x424 <DIO_vWrite+0x14>
 422:	4d c0       	rjmp	.+154    	; 0x4be <DIO_vWrite+0xae>
 424:	81 34       	cpi	r24, 0x41	; 65
 426:	09 f0       	breq	.+2      	; 0x42a <DIO_vWrite+0x1a>
 428:	83 c0       	rjmp	.+262    	; 0x530 <DIO_vWrite+0x120>
 42a:	0f c0       	rjmp	.+30     	; 0x44a <DIO_vWrite+0x3a>
 42c:	82 36       	cpi	r24, 0x62	; 98
 42e:	51 f1       	breq	.+84     	; 0x484 <DIO_vWrite+0x74>
 430:	83 36       	cpi	r24, 0x63	; 99
 432:	20 f4       	brcc	.+8      	; 0x43c <DIO_vWrite+0x2c>
 434:	81 36       	cpi	r24, 0x61	; 97
 436:	09 f0       	breq	.+2      	; 0x43a <DIO_vWrite+0x2a>
 438:	7b c0       	rjmp	.+246    	; 0x530 <DIO_vWrite+0x120>
 43a:	07 c0       	rjmp	.+14     	; 0x44a <DIO_vWrite+0x3a>
 43c:	83 36       	cpi	r24, 0x63	; 99
 43e:	09 f4       	brne	.+2      	; 0x442 <DIO_vWrite+0x32>
 440:	3e c0       	rjmp	.+124    	; 0x4be <DIO_vWrite+0xae>
 442:	84 36       	cpi	r24, 0x64	; 100
 444:	09 f0       	breq	.+2      	; 0x448 <DIO_vWrite+0x38>
 446:	74 c0       	rjmp	.+232    	; 0x530 <DIO_vWrite+0x120>
 448:	57 c0       	rjmp	.+174    	; 0x4f8 <DIO_vWrite+0xe8>
 44a:	41 30       	cpi	r20, 0x01	; 1
 44c:	69 f4       	brne	.+26     	; 0x468 <DIO_vWrite+0x58>
 44e:	2b b3       	in	r18, 0x1b	; 27
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	ac 01       	movw	r20, r24
 456:	02 c0       	rjmp	.+4      	; 0x45c <DIO_vWrite+0x4c>
 458:	44 0f       	add	r20, r20
 45a:	55 1f       	adc	r21, r21
 45c:	6a 95       	dec	r22
 45e:	e2 f7       	brpl	.-8      	; 0x458 <DIO_vWrite+0x48>
 460:	ba 01       	movw	r22, r20
 462:	62 2b       	or	r22, r18
 464:	6b bb       	out	0x1b, r22	; 27
 466:	08 95       	ret
 468:	2b b3       	in	r18, 0x1b	; 27
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	ac 01       	movw	r20, r24
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_vWrite+0x66>
 472:	44 0f       	add	r20, r20
 474:	55 1f       	adc	r21, r21
 476:	6a 95       	dec	r22
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_vWrite+0x62>
 47a:	ba 01       	movw	r22, r20
 47c:	60 95       	com	r22
 47e:	62 23       	and	r22, r18
 480:	6b bb       	out	0x1b, r22	; 27
 482:	08 95       	ret
 484:	41 30       	cpi	r20, 0x01	; 1
 486:	69 f4       	brne	.+26     	; 0x4a2 <DIO_vWrite+0x92>
 488:	28 b3       	in	r18, 0x18	; 24
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	ac 01       	movw	r20, r24
 490:	02 c0       	rjmp	.+4      	; 0x496 <DIO_vWrite+0x86>
 492:	44 0f       	add	r20, r20
 494:	55 1f       	adc	r21, r21
 496:	6a 95       	dec	r22
 498:	e2 f7       	brpl	.-8      	; 0x492 <DIO_vWrite+0x82>
 49a:	ba 01       	movw	r22, r20
 49c:	62 2b       	or	r22, r18
 49e:	68 bb       	out	0x18, r22	; 24
 4a0:	08 95       	ret
 4a2:	28 b3       	in	r18, 0x18	; 24
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	ac 01       	movw	r20, r24
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <DIO_vWrite+0xa0>
 4ac:	44 0f       	add	r20, r20
 4ae:	55 1f       	adc	r21, r21
 4b0:	6a 95       	dec	r22
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <DIO_vWrite+0x9c>
 4b4:	ba 01       	movw	r22, r20
 4b6:	60 95       	com	r22
 4b8:	62 23       	and	r22, r18
 4ba:	68 bb       	out	0x18, r22	; 24
 4bc:	08 95       	ret
 4be:	41 30       	cpi	r20, 0x01	; 1
 4c0:	69 f4       	brne	.+26     	; 0x4dc <DIO_vWrite+0xcc>
 4c2:	25 b3       	in	r18, 0x15	; 21
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	ac 01       	movw	r20, r24
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <DIO_vWrite+0xc0>
 4cc:	44 0f       	add	r20, r20
 4ce:	55 1f       	adc	r21, r21
 4d0:	6a 95       	dec	r22
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <DIO_vWrite+0xbc>
 4d4:	ba 01       	movw	r22, r20
 4d6:	62 2b       	or	r22, r18
 4d8:	65 bb       	out	0x15, r22	; 21
 4da:	08 95       	ret
 4dc:	25 b3       	in	r18, 0x15	; 21
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	ac 01       	movw	r20, r24
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <DIO_vWrite+0xda>
 4e6:	44 0f       	add	r20, r20
 4e8:	55 1f       	adc	r21, r21
 4ea:	6a 95       	dec	r22
 4ec:	e2 f7       	brpl	.-8      	; 0x4e6 <DIO_vWrite+0xd6>
 4ee:	ba 01       	movw	r22, r20
 4f0:	60 95       	com	r22
 4f2:	62 23       	and	r22, r18
 4f4:	65 bb       	out	0x15, r22	; 21
 4f6:	08 95       	ret
 4f8:	41 30       	cpi	r20, 0x01	; 1
 4fa:	69 f4       	brne	.+26     	; 0x516 <DIO_vWrite+0x106>
 4fc:	22 b3       	in	r18, 0x12	; 18
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	ac 01       	movw	r20, r24
 504:	02 c0       	rjmp	.+4      	; 0x50a <DIO_vWrite+0xfa>
 506:	44 0f       	add	r20, r20
 508:	55 1f       	adc	r21, r21
 50a:	6a 95       	dec	r22
 50c:	e2 f7       	brpl	.-8      	; 0x506 <DIO_vWrite+0xf6>
 50e:	ba 01       	movw	r22, r20
 510:	62 2b       	or	r22, r18
 512:	62 bb       	out	0x12, r22	; 18
 514:	08 95       	ret
 516:	22 b3       	in	r18, 0x12	; 18
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	ac 01       	movw	r20, r24
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_vWrite+0x114>
 520:	44 0f       	add	r20, r20
 522:	55 1f       	adc	r21, r21
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_vWrite+0x110>
 528:	ba 01       	movw	r22, r20
 52a:	60 95       	com	r22
 52c:	62 23       	and	r22, r18
 52e:	62 bb       	out	0x12, r22	; 18
 530:	08 95       	ret

00000532 <DIO_vToggle>:
 532:	84 34       	cpi	r24, 0x44	; 68
 534:	09 f4       	brne	.+2      	; 0x538 <DIO_vToggle+0x6>
 536:	3d c0       	rjmp	.+122    	; 0x5b2 <DIO_vToggle+0x80>
 538:	85 34       	cpi	r24, 0x45	; 69
 53a:	40 f4       	brcc	.+16     	; 0x54c <DIO_vToggle+0x1a>
 53c:	82 34       	cpi	r24, 0x42	; 66
 53e:	f9 f0       	breq	.+62     	; 0x57e <DIO_vToggle+0x4c>
 540:	83 34       	cpi	r24, 0x43	; 67
 542:	50 f5       	brcc	.+84     	; 0x598 <DIO_vToggle+0x66>
 544:	81 34       	cpi	r24, 0x41	; 65
 546:	09 f0       	breq	.+2      	; 0x54a <DIO_vToggle+0x18>
 548:	40 c0       	rjmp	.+128    	; 0x5ca <DIO_vToggle+0x98>
 54a:	0c c0       	rjmp	.+24     	; 0x564 <DIO_vToggle+0x32>
 54c:	82 36       	cpi	r24, 0x62	; 98
 54e:	b9 f0       	breq	.+46     	; 0x57e <DIO_vToggle+0x4c>
 550:	83 36       	cpi	r24, 0x63	; 99
 552:	18 f4       	brcc	.+6      	; 0x55a <DIO_vToggle+0x28>
 554:	81 36       	cpi	r24, 0x61	; 97
 556:	c9 f5       	brne	.+114    	; 0x5ca <DIO_vToggle+0x98>
 558:	05 c0       	rjmp	.+10     	; 0x564 <DIO_vToggle+0x32>
 55a:	83 36       	cpi	r24, 0x63	; 99
 55c:	e9 f0       	breq	.+58     	; 0x598 <DIO_vToggle+0x66>
 55e:	84 36       	cpi	r24, 0x64	; 100
 560:	a1 f5       	brne	.+104    	; 0x5ca <DIO_vToggle+0x98>
 562:	27 c0       	rjmp	.+78     	; 0x5b2 <DIO_vToggle+0x80>
 564:	2b b3       	in	r18, 0x1b	; 27
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	ac 01       	movw	r20, r24
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_vToggle+0x40>
 56e:	44 0f       	add	r20, r20
 570:	55 1f       	adc	r21, r21
 572:	6a 95       	dec	r22
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_vToggle+0x3c>
 576:	ba 01       	movw	r22, r20
 578:	62 27       	eor	r22, r18
 57a:	6b bb       	out	0x1b, r22	; 27
 57c:	08 95       	ret
 57e:	28 b3       	in	r18, 0x18	; 24
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	ac 01       	movw	r20, r24
 586:	02 c0       	rjmp	.+4      	; 0x58c <DIO_vToggle+0x5a>
 588:	44 0f       	add	r20, r20
 58a:	55 1f       	adc	r21, r21
 58c:	6a 95       	dec	r22
 58e:	e2 f7       	brpl	.-8      	; 0x588 <DIO_vToggle+0x56>
 590:	ba 01       	movw	r22, r20
 592:	62 27       	eor	r22, r18
 594:	68 bb       	out	0x18, r22	; 24
 596:	08 95       	ret
 598:	25 b3       	in	r18, 0x15	; 21
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	ac 01       	movw	r20, r24
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_vToggle+0x74>
 5a2:	44 0f       	add	r20, r20
 5a4:	55 1f       	adc	r21, r21
 5a6:	6a 95       	dec	r22
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_vToggle+0x70>
 5aa:	ba 01       	movw	r22, r20
 5ac:	62 27       	eor	r22, r18
 5ae:	65 bb       	out	0x15, r22	; 21
 5b0:	08 95       	ret
 5b2:	22 b3       	in	r18, 0x12	; 18
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	ac 01       	movw	r20, r24
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <DIO_vToggle+0x8e>
 5bc:	44 0f       	add	r20, r20
 5be:	55 1f       	adc	r21, r21
 5c0:	6a 95       	dec	r22
 5c2:	e2 f7       	brpl	.-8      	; 0x5bc <DIO_vToggle+0x8a>
 5c4:	ba 01       	movw	r22, r20
 5c6:	62 27       	eor	r22, r18
 5c8:	62 bb       	out	0x12, r22	; 18
 5ca:	08 95       	ret

000005cc <DIO_u8read>:
 5cc:	84 34       	cpi	r24, 0x44	; 68
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <DIO_u8read+0x6>
 5d0:	4e c0       	rjmp	.+156    	; 0x66e <DIO_u8read+0xa2>
 5d2:	85 34       	cpi	r24, 0x45	; 69
 5d4:	40 f4       	brcc	.+16     	; 0x5e6 <DIO_u8read+0x1a>
 5d6:	82 34       	cpi	r24, 0x42	; 66
 5d8:	31 f1       	breq	.+76     	; 0x626 <DIO_u8read+0x5a>
 5da:	83 34       	cpi	r24, 0x43	; 67
 5dc:	b0 f5       	brcc	.+108    	; 0x64a <DIO_u8read+0x7e>
 5de:	81 34       	cpi	r24, 0x41	; 65
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <DIO_u8read+0x18>
 5e2:	57 c0       	rjmp	.+174    	; 0x692 <DIO_u8read+0xc6>
 5e4:	0e c0       	rjmp	.+28     	; 0x602 <DIO_u8read+0x36>
 5e6:	82 36       	cpi	r24, 0x62	; 98
 5e8:	f1 f0       	breq	.+60     	; 0x626 <DIO_u8read+0x5a>
 5ea:	83 36       	cpi	r24, 0x63	; 99
 5ec:	20 f4       	brcc	.+8      	; 0x5f6 <DIO_u8read+0x2a>
 5ee:	81 36       	cpi	r24, 0x61	; 97
 5f0:	09 f0       	breq	.+2      	; 0x5f4 <DIO_u8read+0x28>
 5f2:	4f c0       	rjmp	.+158    	; 0x692 <DIO_u8read+0xc6>
 5f4:	06 c0       	rjmp	.+12     	; 0x602 <DIO_u8read+0x36>
 5f6:	83 36       	cpi	r24, 0x63	; 99
 5f8:	41 f1       	breq	.+80     	; 0x64a <DIO_u8read+0x7e>
 5fa:	84 36       	cpi	r24, 0x64	; 100
 5fc:	09 f0       	breq	.+2      	; 0x600 <DIO_u8read+0x34>
 5fe:	49 c0       	rjmp	.+146    	; 0x692 <DIO_u8read+0xc6>
 600:	36 c0       	rjmp	.+108    	; 0x66e <DIO_u8read+0xa2>
 602:	29 b3       	in	r18, 0x19	; 25
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	06 2e       	mov	r0, r22
 60a:	02 c0       	rjmp	.+4      	; 0x610 <DIO_u8read+0x44>
 60c:	88 0f       	add	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	0a 94       	dec	r0
 612:	e2 f7       	brpl	.-8      	; 0x60c <DIO_u8read+0x40>
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	82 23       	and	r24, r18
 618:	93 23       	and	r25, r19
 61a:	02 c0       	rjmp	.+4      	; 0x620 <DIO_u8read+0x54>
 61c:	95 95       	asr	r25
 61e:	87 95       	ror	r24
 620:	6a 95       	dec	r22
 622:	e2 f7       	brpl	.-8      	; 0x61c <DIO_u8read+0x50>
 624:	08 95       	ret
 626:	26 b3       	in	r18, 0x16	; 22
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	06 2e       	mov	r0, r22
 62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_u8read+0x68>
 630:	88 0f       	add	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	0a 94       	dec	r0
 636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_u8read+0x64>
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	82 23       	and	r24, r18
 63c:	93 23       	and	r25, r19
 63e:	02 c0       	rjmp	.+4      	; 0x644 <DIO_u8read+0x78>
 640:	95 95       	asr	r25
 642:	87 95       	ror	r24
 644:	6a 95       	dec	r22
 646:	e2 f7       	brpl	.-8      	; 0x640 <DIO_u8read+0x74>
 648:	08 95       	ret
 64a:	23 b3       	in	r18, 0x13	; 19
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	06 2e       	mov	r0, r22
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_u8read+0x8c>
 654:	88 0f       	add	r24, r24
 656:	99 1f       	adc	r25, r25
 658:	0a 94       	dec	r0
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_u8read+0x88>
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	82 23       	and	r24, r18
 660:	93 23       	and	r25, r19
 662:	02 c0       	rjmp	.+4      	; 0x668 <DIO_u8read+0x9c>
 664:	95 95       	asr	r25
 666:	87 95       	ror	r24
 668:	6a 95       	dec	r22
 66a:	e2 f7       	brpl	.-8      	; 0x664 <DIO_u8read+0x98>
 66c:	08 95       	ret
 66e:	20 b3       	in	r18, 0x10	; 16
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	06 2e       	mov	r0, r22
 676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_u8read+0xb0>
 678:	88 0f       	add	r24, r24
 67a:	99 1f       	adc	r25, r25
 67c:	0a 94       	dec	r0
 67e:	e2 f7       	brpl	.-8      	; 0x678 <DIO_u8read+0xac>
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	82 23       	and	r24, r18
 684:	93 23       	and	r25, r19
 686:	02 c0       	rjmp	.+4      	; 0x68c <DIO_u8read+0xc0>
 688:	95 95       	asr	r25
 68a:	87 95       	ror	r24
 68c:	6a 95       	dec	r22
 68e:	e2 f7       	brpl	.-8      	; 0x688 <DIO_u8read+0xbc>
 690:	08 95       	ret
 692:	08 95       	ret

00000694 <DIO_vSETPORTDir>:
 694:	84 34       	cpi	r24, 0x44	; 68
 696:	d9 f0       	breq	.+54     	; 0x6ce <DIO_vSETPORTDir+0x3a>
 698:	85 34       	cpi	r24, 0x45	; 69
 69a:	38 f4       	brcc	.+14     	; 0x6aa <DIO_vSETPORTDir+0x16>
 69c:	82 34       	cpi	r24, 0x42	; 66
 69e:	99 f0       	breq	.+38     	; 0x6c6 <DIO_vSETPORTDir+0x32>
 6a0:	83 34       	cpi	r24, 0x43	; 67
 6a2:	98 f4       	brcc	.+38     	; 0x6ca <DIO_vSETPORTDir+0x36>
 6a4:	81 34       	cpi	r24, 0x41	; 65
 6a6:	a1 f4       	brne	.+40     	; 0x6d0 <DIO_vSETPORTDir+0x3c>
 6a8:	0c c0       	rjmp	.+24     	; 0x6c2 <DIO_vSETPORTDir+0x2e>
 6aa:	82 36       	cpi	r24, 0x62	; 98
 6ac:	61 f0       	breq	.+24     	; 0x6c6 <DIO_vSETPORTDir+0x32>
 6ae:	83 36       	cpi	r24, 0x63	; 99
 6b0:	18 f4       	brcc	.+6      	; 0x6b8 <DIO_vSETPORTDir+0x24>
 6b2:	81 36       	cpi	r24, 0x61	; 97
 6b4:	69 f4       	brne	.+26     	; 0x6d0 <DIO_vSETPORTDir+0x3c>
 6b6:	05 c0       	rjmp	.+10     	; 0x6c2 <DIO_vSETPORTDir+0x2e>
 6b8:	83 36       	cpi	r24, 0x63	; 99
 6ba:	39 f0       	breq	.+14     	; 0x6ca <DIO_vSETPORTDir+0x36>
 6bc:	84 36       	cpi	r24, 0x64	; 100
 6be:	41 f4       	brne	.+16     	; 0x6d0 <DIO_vSETPORTDir+0x3c>
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <DIO_vSETPORTDir+0x3a>
 6c2:	6a bb       	out	0x1a, r22	; 26
 6c4:	08 95       	ret
 6c6:	67 bb       	out	0x17, r22	; 23
 6c8:	08 95       	ret
 6ca:	64 bb       	out	0x14, r22	; 20
 6cc:	08 95       	ret
 6ce:	61 bb       	out	0x11, r22	; 17
 6d0:	08 95       	ret

000006d2 <DIO_vWritePORT>:
 6d2:	84 34       	cpi	r24, 0x44	; 68
 6d4:	d9 f0       	breq	.+54     	; 0x70c <DIO_vWritePORT+0x3a>
 6d6:	85 34       	cpi	r24, 0x45	; 69
 6d8:	38 f4       	brcc	.+14     	; 0x6e8 <DIO_vWritePORT+0x16>
 6da:	82 34       	cpi	r24, 0x42	; 66
 6dc:	99 f0       	breq	.+38     	; 0x704 <DIO_vWritePORT+0x32>
 6de:	83 34       	cpi	r24, 0x43	; 67
 6e0:	98 f4       	brcc	.+38     	; 0x708 <DIO_vWritePORT+0x36>
 6e2:	81 34       	cpi	r24, 0x41	; 65
 6e4:	a1 f4       	brne	.+40     	; 0x70e <DIO_vWritePORT+0x3c>
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <DIO_vWritePORT+0x2e>
 6e8:	82 36       	cpi	r24, 0x62	; 98
 6ea:	61 f0       	breq	.+24     	; 0x704 <DIO_vWritePORT+0x32>
 6ec:	83 36       	cpi	r24, 0x63	; 99
 6ee:	18 f4       	brcc	.+6      	; 0x6f6 <DIO_vWritePORT+0x24>
 6f0:	81 36       	cpi	r24, 0x61	; 97
 6f2:	69 f4       	brne	.+26     	; 0x70e <DIO_vWritePORT+0x3c>
 6f4:	05 c0       	rjmp	.+10     	; 0x700 <DIO_vWritePORT+0x2e>
 6f6:	83 36       	cpi	r24, 0x63	; 99
 6f8:	39 f0       	breq	.+14     	; 0x708 <DIO_vWritePORT+0x36>
 6fa:	84 36       	cpi	r24, 0x64	; 100
 6fc:	41 f4       	brne	.+16     	; 0x70e <DIO_vWritePORT+0x3c>
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <DIO_vWritePORT+0x3a>
 700:	6b bb       	out	0x1b, r22	; 27
 702:	08 95       	ret
 704:	68 bb       	out	0x18, r22	; 24
 706:	08 95       	ret
 708:	65 bb       	out	0x15, r22	; 21
 70a:	08 95       	ret
 70c:	62 bb       	out	0x12, r22	; 18
 70e:	08 95       	ret

00000710 <DIO_vTOGPORT>:
 710:	84 34       	cpi	r24, 0x44	; 68
 712:	09 f1       	breq	.+66     	; 0x756 <DIO_vTOGPORT+0x46>
 714:	85 34       	cpi	r24, 0x45	; 69
 716:	38 f4       	brcc	.+14     	; 0x726 <DIO_vTOGPORT+0x16>
 718:	82 34       	cpi	r24, 0x42	; 66
 71a:	a9 f0       	breq	.+42     	; 0x746 <DIO_vTOGPORT+0x36>
 71c:	83 34       	cpi	r24, 0x43	; 67
 71e:	b8 f4       	brcc	.+46     	; 0x74e <DIO_vTOGPORT+0x3e>
 720:	81 34       	cpi	r24, 0x41	; 65
 722:	e1 f4       	brne	.+56     	; 0x75c <DIO_vTOGPORT+0x4c>
 724:	0c c0       	rjmp	.+24     	; 0x73e <DIO_vTOGPORT+0x2e>
 726:	82 36       	cpi	r24, 0x62	; 98
 728:	71 f0       	breq	.+28     	; 0x746 <DIO_vTOGPORT+0x36>
 72a:	83 36       	cpi	r24, 0x63	; 99
 72c:	18 f4       	brcc	.+6      	; 0x734 <DIO_vTOGPORT+0x24>
 72e:	81 36       	cpi	r24, 0x61	; 97
 730:	a9 f4       	brne	.+42     	; 0x75c <DIO_vTOGPORT+0x4c>
 732:	05 c0       	rjmp	.+10     	; 0x73e <DIO_vTOGPORT+0x2e>
 734:	83 36       	cpi	r24, 0x63	; 99
 736:	59 f0       	breq	.+22     	; 0x74e <DIO_vTOGPORT+0x3e>
 738:	84 36       	cpi	r24, 0x64	; 100
 73a:	81 f4       	brne	.+32     	; 0x75c <DIO_vTOGPORT+0x4c>
 73c:	0c c0       	rjmp	.+24     	; 0x756 <DIO_vTOGPORT+0x46>
 73e:	8b b3       	in	r24, 0x1b	; 27
 740:	80 95       	com	r24
 742:	8b bb       	out	0x1b, r24	; 27
 744:	08 95       	ret
 746:	88 b3       	in	r24, 0x18	; 24
 748:	80 95       	com	r24
 74a:	88 bb       	out	0x18, r24	; 24
 74c:	08 95       	ret
 74e:	85 b3       	in	r24, 0x15	; 21
 750:	80 95       	com	r24
 752:	85 bb       	out	0x15, r24	; 21
 754:	08 95       	ret
 756:	82 b3       	in	r24, 0x12	; 18
 758:	80 95       	com	r24
 75a:	82 bb       	out	0x12, r24	; 18
 75c:	08 95       	ret

0000075e <DIO_u8ReadPort>:
 75e:	84 34       	cpi	r24, 0x44	; 68
 760:	d9 f0       	breq	.+54     	; 0x798 <DIO_u8ReadPort+0x3a>
 762:	85 34       	cpi	r24, 0x45	; 69
 764:	38 f4       	brcc	.+14     	; 0x774 <DIO_u8ReadPort+0x16>
 766:	82 34       	cpi	r24, 0x42	; 66
 768:	99 f0       	breq	.+38     	; 0x790 <DIO_u8ReadPort+0x32>
 76a:	83 34       	cpi	r24, 0x43	; 67
 76c:	98 f4       	brcc	.+38     	; 0x794 <DIO_u8ReadPort+0x36>
 76e:	81 34       	cpi	r24, 0x41	; 65
 770:	a9 f4       	brne	.+42     	; 0x79c <DIO_u8ReadPort+0x3e>
 772:	0c c0       	rjmp	.+24     	; 0x78c <DIO_u8ReadPort+0x2e>
 774:	82 36       	cpi	r24, 0x62	; 98
 776:	61 f0       	breq	.+24     	; 0x790 <DIO_u8ReadPort+0x32>
 778:	83 36       	cpi	r24, 0x63	; 99
 77a:	18 f4       	brcc	.+6      	; 0x782 <DIO_u8ReadPort+0x24>
 77c:	81 36       	cpi	r24, 0x61	; 97
 77e:	71 f4       	brne	.+28     	; 0x79c <DIO_u8ReadPort+0x3e>
 780:	05 c0       	rjmp	.+10     	; 0x78c <DIO_u8ReadPort+0x2e>
 782:	83 36       	cpi	r24, 0x63	; 99
 784:	39 f0       	breq	.+14     	; 0x794 <DIO_u8ReadPort+0x36>
 786:	84 36       	cpi	r24, 0x64	; 100
 788:	49 f4       	brne	.+18     	; 0x79c <DIO_u8ReadPort+0x3e>
 78a:	06 c0       	rjmp	.+12     	; 0x798 <DIO_u8ReadPort+0x3a>
 78c:	89 b3       	in	r24, 0x19	; 25
 78e:	08 95       	ret
 790:	86 b3       	in	r24, 0x16	; 22
 792:	08 95       	ret
 794:	83 b3       	in	r24, 0x13	; 19
 796:	08 95       	ret
 798:	80 b3       	in	r24, 0x10	; 16
 79a:	08 95       	ret
 79c:	08 95       	ret

0000079e <DIO_vWriteHighNibble>:
 79e:	62 95       	swap	r22
 7a0:	60 7f       	andi	r22, 0xF0	; 240
 7a2:	84 34       	cpi	r24, 0x44	; 68
 7a4:	51 f1       	breq	.+84     	; 0x7fa <DIO_vWriteHighNibble+0x5c>
 7a6:	85 34       	cpi	r24, 0x45	; 69
 7a8:	38 f4       	brcc	.+14     	; 0x7b8 <DIO_vWriteHighNibble+0x1a>
 7aa:	82 34       	cpi	r24, 0x42	; 66
 7ac:	c1 f0       	breq	.+48     	; 0x7de <DIO_vWriteHighNibble+0x40>
 7ae:	83 34       	cpi	r24, 0x43	; 67
 7b0:	e8 f4       	brcc	.+58     	; 0x7ec <DIO_vWriteHighNibble+0x4e>
 7b2:	81 34       	cpi	r24, 0x41	; 65
 7b4:	41 f5       	brne	.+80     	; 0x806 <DIO_vWriteHighNibble+0x68>
 7b6:	0c c0       	rjmp	.+24     	; 0x7d0 <DIO_vWriteHighNibble+0x32>
 7b8:	82 36       	cpi	r24, 0x62	; 98
 7ba:	89 f0       	breq	.+34     	; 0x7de <DIO_vWriteHighNibble+0x40>
 7bc:	83 36       	cpi	r24, 0x63	; 99
 7be:	18 f4       	brcc	.+6      	; 0x7c6 <DIO_vWriteHighNibble+0x28>
 7c0:	81 36       	cpi	r24, 0x61	; 97
 7c2:	09 f5       	brne	.+66     	; 0x806 <DIO_vWriteHighNibble+0x68>
 7c4:	05 c0       	rjmp	.+10     	; 0x7d0 <DIO_vWriteHighNibble+0x32>
 7c6:	83 36       	cpi	r24, 0x63	; 99
 7c8:	89 f0       	breq	.+34     	; 0x7ec <DIO_vWriteHighNibble+0x4e>
 7ca:	84 36       	cpi	r24, 0x64	; 100
 7cc:	e1 f4       	brne	.+56     	; 0x806 <DIO_vWriteHighNibble+0x68>
 7ce:	15 c0       	rjmp	.+42     	; 0x7fa <DIO_vWriteHighNibble+0x5c>
 7d0:	8b b3       	in	r24, 0x1b	; 27
 7d2:	8f 70       	andi	r24, 0x0F	; 15
 7d4:	8b bb       	out	0x1b, r24	; 27
 7d6:	8b b3       	in	r24, 0x1b	; 27
 7d8:	68 2b       	or	r22, r24
 7da:	6b bb       	out	0x1b, r22	; 27
 7dc:	08 95       	ret
 7de:	88 b3       	in	r24, 0x18	; 24
 7e0:	8f 70       	andi	r24, 0x0F	; 15
 7e2:	88 bb       	out	0x18, r24	; 24
 7e4:	88 b3       	in	r24, 0x18	; 24
 7e6:	68 2b       	or	r22, r24
 7e8:	68 bb       	out	0x18, r22	; 24
 7ea:	08 95       	ret
 7ec:	85 b3       	in	r24, 0x15	; 21
 7ee:	8f 70       	andi	r24, 0x0F	; 15
 7f0:	85 bb       	out	0x15, r24	; 21
 7f2:	85 b3       	in	r24, 0x15	; 21
 7f4:	68 2b       	or	r22, r24
 7f6:	65 bb       	out	0x15, r22	; 21
 7f8:	08 95       	ret
 7fa:	82 b3       	in	r24, 0x12	; 18
 7fc:	8f 70       	andi	r24, 0x0F	; 15
 7fe:	82 bb       	out	0x12, r24	; 18
 800:	82 b3       	in	r24, 0x12	; 18
 802:	68 2b       	or	r22, r24
 804:	62 bb       	out	0x12, r22	; 18
 806:	08 95       	ret

00000808 <DIO_vWriteLowNibble>:
 808:	84 34       	cpi	r24, 0x44	; 68
 80a:	51 f1       	breq	.+84     	; 0x860 <__stack+0x1>
 80c:	85 34       	cpi	r24, 0x45	; 69
 80e:	38 f4       	brcc	.+14     	; 0x81e <DIO_vWriteLowNibble+0x16>
 810:	82 34       	cpi	r24, 0x42	; 66
 812:	c1 f0       	breq	.+48     	; 0x844 <DIO_vWriteLowNibble+0x3c>
 814:	83 34       	cpi	r24, 0x43	; 67
 816:	e8 f4       	brcc	.+58     	; 0x852 <DIO_vWriteLowNibble+0x4a>
 818:	81 34       	cpi	r24, 0x41	; 65
 81a:	41 f5       	brne	.+80     	; 0x86c <__stack+0xd>
 81c:	0c c0       	rjmp	.+24     	; 0x836 <DIO_vWriteLowNibble+0x2e>
 81e:	82 36       	cpi	r24, 0x62	; 98
 820:	89 f0       	breq	.+34     	; 0x844 <DIO_vWriteLowNibble+0x3c>
 822:	83 36       	cpi	r24, 0x63	; 99
 824:	18 f4       	brcc	.+6      	; 0x82c <DIO_vWriteLowNibble+0x24>
 826:	81 36       	cpi	r24, 0x61	; 97
 828:	09 f5       	brne	.+66     	; 0x86c <__stack+0xd>
 82a:	05 c0       	rjmp	.+10     	; 0x836 <DIO_vWriteLowNibble+0x2e>
 82c:	83 36       	cpi	r24, 0x63	; 99
 82e:	89 f0       	breq	.+34     	; 0x852 <DIO_vWriteLowNibble+0x4a>
 830:	84 36       	cpi	r24, 0x64	; 100
 832:	e1 f4       	brne	.+56     	; 0x86c <__stack+0xd>
 834:	15 c0       	rjmp	.+42     	; 0x860 <__stack+0x1>
 836:	8b b3       	in	r24, 0x1b	; 27
 838:	80 7f       	andi	r24, 0xF0	; 240
 83a:	8b bb       	out	0x1b, r24	; 27
 83c:	8b b3       	in	r24, 0x1b	; 27
 83e:	68 2b       	or	r22, r24
 840:	6b bb       	out	0x1b, r22	; 27
 842:	08 95       	ret
 844:	88 b3       	in	r24, 0x18	; 24
 846:	80 7f       	andi	r24, 0xF0	; 240
 848:	88 bb       	out	0x18, r24	; 24
 84a:	88 b3       	in	r24, 0x18	; 24
 84c:	68 2b       	or	r22, r24
 84e:	68 bb       	out	0x18, r22	; 24
 850:	08 95       	ret
 852:	85 b3       	in	r24, 0x15	; 21
 854:	80 7f       	andi	r24, 0xF0	; 240
 856:	85 bb       	out	0x15, r24	; 21
 858:	85 b3       	in	r24, 0x15	; 21
 85a:	68 2b       	or	r22, r24
 85c:	65 bb       	out	0x15, r22	; 21
 85e:	08 95       	ret
 860:	82 b3       	in	r24, 0x12	; 18
 862:	80 7f       	andi	r24, 0xF0	; 240
 864:	82 bb       	out	0x12, r24	; 18
 866:	82 b3       	in	r24, 0x12	; 18
 868:	68 2b       	or	r22, r24
 86a:	62 bb       	out	0x12, r22	; 18
 86c:	08 95       	ret

0000086e <DIO_vEnablePullUp>:
 86e:	84 34       	cpi	r24, 0x44	; 68
 870:	09 f4       	brne	.+2      	; 0x874 <DIO_vEnablePullUp+0x6>
 872:	71 c0       	rjmp	.+226    	; 0x956 <DIO_vEnablePullUp+0xe8>
 874:	85 34       	cpi	r24, 0x45	; 69
 876:	48 f4       	brcc	.+18     	; 0x88a <DIO_vEnablePullUp+0x1c>
 878:	82 34       	cpi	r24, 0x42	; 66
 87a:	99 f1       	breq	.+102    	; 0x8e2 <DIO_vEnablePullUp+0x74>
 87c:	83 34       	cpi	r24, 0x43	; 67
 87e:	08 f0       	brcs	.+2      	; 0x882 <DIO_vEnablePullUp+0x14>
 880:	4d c0       	rjmp	.+154    	; 0x91c <DIO_vEnablePullUp+0xae>
 882:	81 34       	cpi	r24, 0x41	; 65
 884:	09 f0       	breq	.+2      	; 0x888 <DIO_vEnablePullUp+0x1a>
 886:	83 c0       	rjmp	.+262    	; 0x98e <DIO_vEnablePullUp+0x120>
 888:	0f c0       	rjmp	.+30     	; 0x8a8 <DIO_vEnablePullUp+0x3a>
 88a:	82 36       	cpi	r24, 0x62	; 98
 88c:	51 f1       	breq	.+84     	; 0x8e2 <DIO_vEnablePullUp+0x74>
 88e:	83 36       	cpi	r24, 0x63	; 99
 890:	20 f4       	brcc	.+8      	; 0x89a <DIO_vEnablePullUp+0x2c>
 892:	81 36       	cpi	r24, 0x61	; 97
 894:	09 f0       	breq	.+2      	; 0x898 <DIO_vEnablePullUp+0x2a>
 896:	7b c0       	rjmp	.+246    	; 0x98e <DIO_vEnablePullUp+0x120>
 898:	07 c0       	rjmp	.+14     	; 0x8a8 <DIO_vEnablePullUp+0x3a>
 89a:	83 36       	cpi	r24, 0x63	; 99
 89c:	09 f4       	brne	.+2      	; 0x8a0 <DIO_vEnablePullUp+0x32>
 89e:	3e c0       	rjmp	.+124    	; 0x91c <DIO_vEnablePullUp+0xae>
 8a0:	84 36       	cpi	r24, 0x64	; 100
 8a2:	09 f0       	breq	.+2      	; 0x8a6 <DIO_vEnablePullUp+0x38>
 8a4:	74 c0       	rjmp	.+232    	; 0x98e <DIO_vEnablePullUp+0x120>
 8a6:	57 c0       	rjmp	.+174    	; 0x956 <DIO_vEnablePullUp+0xe8>
 8a8:	41 30       	cpi	r20, 0x01	; 1
 8aa:	69 f4       	brne	.+26     	; 0x8c6 <DIO_vEnablePullUp+0x58>
 8ac:	2b b3       	in	r18, 0x1b	; 27
 8ae:	81 e0       	ldi	r24, 0x01	; 1
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	ac 01       	movw	r20, r24
 8b4:	02 c0       	rjmp	.+4      	; 0x8ba <DIO_vEnablePullUp+0x4c>
 8b6:	44 0f       	add	r20, r20
 8b8:	55 1f       	adc	r21, r21
 8ba:	6a 95       	dec	r22
 8bc:	e2 f7       	brpl	.-8      	; 0x8b6 <DIO_vEnablePullUp+0x48>
 8be:	ba 01       	movw	r22, r20
 8c0:	62 2b       	or	r22, r18
 8c2:	6b bb       	out	0x1b, r22	; 27
 8c4:	08 95       	ret
 8c6:	2b b3       	in	r18, 0x1b	; 27
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	ac 01       	movw	r20, r24
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <DIO_vEnablePullUp+0x66>
 8d0:	44 0f       	add	r20, r20
 8d2:	55 1f       	adc	r21, r21
 8d4:	6a 95       	dec	r22
 8d6:	e2 f7       	brpl	.-8      	; 0x8d0 <DIO_vEnablePullUp+0x62>
 8d8:	ba 01       	movw	r22, r20
 8da:	60 95       	com	r22
 8dc:	62 23       	and	r22, r18
 8de:	6b bb       	out	0x1b, r22	; 27
 8e0:	08 95       	ret
 8e2:	41 30       	cpi	r20, 0x01	; 1
 8e4:	69 f4       	brne	.+26     	; 0x900 <DIO_vEnablePullUp+0x92>
 8e6:	28 b3       	in	r18, 0x18	; 24
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	90 e0       	ldi	r25, 0x00	; 0
 8ec:	ac 01       	movw	r20, r24
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <DIO_vEnablePullUp+0x86>
 8f0:	44 0f       	add	r20, r20
 8f2:	55 1f       	adc	r21, r21
 8f4:	6a 95       	dec	r22
 8f6:	e2 f7       	brpl	.-8      	; 0x8f0 <DIO_vEnablePullUp+0x82>
 8f8:	ba 01       	movw	r22, r20
 8fa:	62 2b       	or	r22, r18
 8fc:	68 bb       	out	0x18, r22	; 24
 8fe:	08 95       	ret
 900:	28 b3       	in	r18, 0x18	; 24
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	ac 01       	movw	r20, r24
 908:	02 c0       	rjmp	.+4      	; 0x90e <DIO_vEnablePullUp+0xa0>
 90a:	44 0f       	add	r20, r20
 90c:	55 1f       	adc	r21, r21
 90e:	6a 95       	dec	r22
 910:	e2 f7       	brpl	.-8      	; 0x90a <DIO_vEnablePullUp+0x9c>
 912:	ba 01       	movw	r22, r20
 914:	60 95       	com	r22
 916:	62 23       	and	r22, r18
 918:	68 bb       	out	0x18, r22	; 24
 91a:	08 95       	ret
 91c:	41 30       	cpi	r20, 0x01	; 1
 91e:	69 f4       	brne	.+26     	; 0x93a <DIO_vEnablePullUp+0xcc>
 920:	25 b3       	in	r18, 0x15	; 21
 922:	81 e0       	ldi	r24, 0x01	; 1
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	ac 01       	movw	r20, r24
 928:	02 c0       	rjmp	.+4      	; 0x92e <DIO_vEnablePullUp+0xc0>
 92a:	44 0f       	add	r20, r20
 92c:	55 1f       	adc	r21, r21
 92e:	6a 95       	dec	r22
 930:	e2 f7       	brpl	.-8      	; 0x92a <DIO_vEnablePullUp+0xbc>
 932:	ba 01       	movw	r22, r20
 934:	62 2b       	or	r22, r18
 936:	65 bb       	out	0x15, r22	; 21
 938:	08 95       	ret
 93a:	25 b3       	in	r18, 0x15	; 21
 93c:	81 e0       	ldi	r24, 0x01	; 1
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	ac 01       	movw	r20, r24
 942:	02 c0       	rjmp	.+4      	; 0x948 <DIO_vEnablePullUp+0xda>
 944:	44 0f       	add	r20, r20
 946:	55 1f       	adc	r21, r21
 948:	6a 95       	dec	r22
 94a:	e2 f7       	brpl	.-8      	; 0x944 <DIO_vEnablePullUp+0xd6>
 94c:	ba 01       	movw	r22, r20
 94e:	60 95       	com	r22
 950:	62 23       	and	r22, r18
 952:	65 bb       	out	0x15, r22	; 21
 954:	08 95       	ret
 956:	41 30       	cpi	r20, 0x01	; 1
 958:	69 f4       	brne	.+26     	; 0x974 <DIO_vEnablePullUp+0x106>
 95a:	22 b3       	in	r18, 0x12	; 18
 95c:	81 e0       	ldi	r24, 0x01	; 1
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	ac 01       	movw	r20, r24
 962:	02 c0       	rjmp	.+4      	; 0x968 <DIO_vEnablePullUp+0xfa>
 964:	44 0f       	add	r20, r20
 966:	55 1f       	adc	r21, r21
 968:	6a 95       	dec	r22
 96a:	e2 f7       	brpl	.-8      	; 0x964 <DIO_vEnablePullUp+0xf6>
 96c:	ba 01       	movw	r22, r20
 96e:	62 2b       	or	r22, r18
 970:	62 bb       	out	0x12, r22	; 18
 972:	08 95       	ret
 974:	22 b3       	in	r18, 0x12	; 18
 976:	81 e0       	ldi	r24, 0x01	; 1
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	ac 01       	movw	r20, r24
 97c:	02 c0       	rjmp	.+4      	; 0x982 <DIO_vEnablePullUp+0x114>
 97e:	44 0f       	add	r20, r20
 980:	55 1f       	adc	r21, r21
 982:	6a 95       	dec	r22
 984:	e2 f7       	brpl	.-8      	; 0x97e <DIO_vEnablePullUp+0x110>
 986:	ba 01       	movw	r22, r20
 988:	60 95       	com	r22
 98a:	62 23       	and	r22, r18
 98c:	62 bb       	out	0x12, r22	; 18
 98e:	08 95       	ret

00000990 <keypad_vInit>:
 990:	83 e4       	ldi	r24, 0x43	; 67
 992:	6f e0       	ldi	r22, 0x0F	; 15
 994:	0e 94 4a 03 	call	0x694	; 0x694 <DIO_vSETPORTDir>
 998:	83 e4       	ldi	r24, 0x43	; 67
 99a:	67 e0       	ldi	r22, 0x07	; 7
 99c:	41 e0       	ldi	r20, 0x01	; 1
 99e:	0e 94 37 04 	call	0x86e	; 0x86e <DIO_vEnablePullUp>
 9a2:	83 e4       	ldi	r24, 0x43	; 67
 9a4:	66 e0       	ldi	r22, 0x06	; 6
 9a6:	41 e0       	ldi	r20, 0x01	; 1
 9a8:	0e 94 37 04 	call	0x86e	; 0x86e <DIO_vEnablePullUp>
 9ac:	83 e4       	ldi	r24, 0x43	; 67
 9ae:	65 e0       	ldi	r22, 0x05	; 5
 9b0:	41 e0       	ldi	r20, 0x01	; 1
 9b2:	0e 94 37 04 	call	0x86e	; 0x86e <DIO_vEnablePullUp>
 9b6:	83 e4       	ldi	r24, 0x43	; 67
 9b8:	64 e0       	ldi	r22, 0x04	; 4
 9ba:	41 e0       	ldi	r20, 0x01	; 1
 9bc:	0e 94 37 04 	call	0x86e	; 0x86e <DIO_vEnablePullUp>
 9c0:	08 95       	ret

000009c2 <keypad_u8read>:
 9c2:	0f 93       	push	r16
 9c4:	1f 93       	push	r17
 9c6:	cf 93       	push	r28
 9c8:	df 93       	push	r29
 9ca:	cd b7       	in	r28, 0x3d	; 61
 9cc:	de b7       	in	r29, 0x3e	; 62
 9ce:	60 97       	sbiw	r28, 0x10	; 16
 9d0:	0f b6       	in	r0, 0x3f	; 63
 9d2:	f8 94       	cli
 9d4:	de bf       	out	0x3e, r29	; 62
 9d6:	0f be       	out	0x3f, r0	; 63
 9d8:	cd bf       	out	0x3d, r28	; 61
 9da:	de 01       	movw	r26, r28
 9dc:	11 96       	adiw	r26, 0x01	; 1
 9de:	e2 e9       	ldi	r30, 0x92	; 146
 9e0:	f0 e0       	ldi	r31, 0x00	; 0
 9e2:	80 e1       	ldi	r24, 0x10	; 16
 9e4:	01 90       	ld	r0, Z+
 9e6:	0d 92       	st	X+, r0
 9e8:	81 50       	subi	r24, 0x01	; 1
 9ea:	e1 f7       	brne	.-8      	; 0x9e4 <keypad_u8read+0x22>
 9ec:	00 e0       	ldi	r16, 0x00	; 0
 9ee:	83 e4       	ldi	r24, 0x43	; 67
 9f0:	6f ef       	ldi	r22, 0xFF	; 255
 9f2:	0e 94 04 04 	call	0x808	; 0x808 <DIO_vWriteLowNibble>
 9f6:	83 e4       	ldi	r24, 0x43	; 67
 9f8:	60 2f       	mov	r22, r16
 9fa:	40 e0       	ldi	r20, 0x00	; 0
 9fc:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 a00:	10 e0       	ldi	r17, 0x00	; 0
 a02:	61 2f       	mov	r22, r17
 a04:	6c 5f       	subi	r22, 0xFC	; 252
 a06:	83 e4       	ldi	r24, 0x43	; 67
 a08:	0e 94 e6 02 	call	0x5cc	; 0x5cc <DIO_u8read>
 a0c:	88 23       	and	r24, r24
 a0e:	61 f4       	brne	.+24     	; 0xa28 <keypad_u8read+0x66>
 a10:	e0 2f       	mov	r30, r16
 a12:	f0 e0       	ldi	r31, 0x00	; 0
 a14:	ee 0f       	add	r30, r30
 a16:	ff 1f       	adc	r31, r31
 a18:	ee 0f       	add	r30, r30
 a1a:	ff 1f       	adc	r31, r31
 a1c:	e1 0f       	add	r30, r17
 a1e:	f1 1d       	adc	r31, r1
 a20:	ec 0f       	add	r30, r28
 a22:	fd 1f       	adc	r31, r29
 a24:	81 81       	ldd	r24, Z+1	; 0x01
 a26:	04 c0       	rjmp	.+8      	; 0xa30 <keypad_u8read+0x6e>
 a28:	1f 5f       	subi	r17, 0xFF	; 255
 a2a:	14 30       	cpi	r17, 0x04	; 4
 a2c:	51 f7       	brne	.-44     	; 0xa02 <keypad_u8read+0x40>
 a2e:	0b c0       	rjmp	.+22     	; 0xa46 <keypad_u8read+0x84>
 a30:	60 96       	adiw	r28, 0x10	; 16
 a32:	0f b6       	in	r0, 0x3f	; 63
 a34:	f8 94       	cli
 a36:	de bf       	out	0x3e, r29	; 62
 a38:	0f be       	out	0x3f, r0	; 63
 a3a:	cd bf       	out	0x3d, r28	; 61
 a3c:	df 91       	pop	r29
 a3e:	cf 91       	pop	r28
 a40:	1f 91       	pop	r17
 a42:	0f 91       	pop	r16
 a44:	08 95       	ret
 a46:	0f 5f       	subi	r16, 0xFF	; 255
 a48:	04 30       	cpi	r16, 0x04	; 4
 a4a:	89 f6       	brne	.-94     	; 0x9ee <keypad_u8read+0x2c>
 a4c:	8f ef       	ldi	r24, 0xFF	; 255
 a4e:	f0 cf       	rjmp	.-32     	; 0xa30 <keypad_u8read+0x6e>

00000a50 <peekaboo>:
 a50:	82 e4       	ldi	r24, 0x42	; 66
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	60 e0       	ldi	r22, 0x00	; 0
 a56:	70 e0       	ldi	r23, 0x00	; 0
 a58:	41 e0       	ldi	r20, 0x01	; 1
 a5a:	50 e0       	ldi	r21, 0x00	; 0
 a5c:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 a60:	83 ef       	ldi	r24, 0xF3	; 243
 a62:	91 e0       	ldi	r25, 0x01	; 1
 a64:	01 97       	sbiw	r24, 0x01	; 1
 a66:	f1 f7       	brne	.-4      	; 0xa64 <peekaboo+0x14>
 a68:	00 c0       	rjmp	.+0      	; 0xa6a <peekaboo+0x1a>
 a6a:	00 00       	nop
 a6c:	82 e4       	ldi	r24, 0x42	; 66
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	60 e0       	ldi	r22, 0x00	; 0
 a72:	70 e0       	ldi	r23, 0x00	; 0
 a74:	40 e0       	ldi	r20, 0x00	; 0
 a76:	50 e0       	ldi	r21, 0x00	; 0
 a78:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 a7c:	83 ef       	ldi	r24, 0xF3	; 243
 a7e:	91 e0       	ldi	r25, 0x01	; 1
 a80:	01 97       	sbiw	r24, 0x01	; 1
 a82:	f1 f7       	brne	.-4      	; 0xa80 <peekaboo+0x30>
 a84:	00 c0       	rjmp	.+0      	; 0xa86 <peekaboo+0x36>
 a86:	00 00       	nop
 a88:	08 95       	ret

00000a8a <LCD_vSend_cmd>:
 a8a:	cf 93       	push	r28
 a8c:	c8 2f       	mov	r28, r24
 a8e:	68 2f       	mov	r22, r24
 a90:	62 95       	swap	r22
 a92:	6f 70       	andi	r22, 0x0F	; 15
 a94:	81 e4       	ldi	r24, 0x41	; 65
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	70 e0       	ldi	r23, 0x00	; 0
 a9a:	0e 94 cf 03 	call	0x79e	; 0x79e <DIO_vWriteHighNibble>
 a9e:	82 e4       	ldi	r24, 0x42	; 66
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	62 e0       	ldi	r22, 0x02	; 2
 aa4:	70 e0       	ldi	r23, 0x00	; 0
 aa6:	40 e0       	ldi	r20, 0x00	; 0
 aa8:	50 e0       	ldi	r21, 0x00	; 0
 aaa:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 aae:	0e 94 28 05 	call	0xa50	; 0xa50 <peekaboo>
 ab2:	81 e4       	ldi	r24, 0x41	; 65
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	6c 2f       	mov	r22, r28
 ab8:	70 e0       	ldi	r23, 0x00	; 0
 aba:	0e 94 cf 03 	call	0x79e	; 0x79e <DIO_vWriteHighNibble>
 abe:	82 e4       	ldi	r24, 0x42	; 66
 ac0:	90 e0       	ldi	r25, 0x00	; 0
 ac2:	62 e0       	ldi	r22, 0x02	; 2
 ac4:	70 e0       	ldi	r23, 0x00	; 0
 ac6:	40 e0       	ldi	r20, 0x00	; 0
 ac8:	50 e0       	ldi	r21, 0x00	; 0
 aca:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 ace:	0e 94 28 05 	call	0xa50	; 0xa50 <peekaboo>
 ad2:	89 ef       	ldi	r24, 0xF9	; 249
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	01 97       	sbiw	r24, 0x01	; 1
 ad8:	f1 f7       	brne	.-4      	; 0xad6 <LCD_vSend_cmd+0x4c>
 ada:	00 c0       	rjmp	.+0      	; 0xadc <LCD_vSend_cmd+0x52>
 adc:	00 00       	nop
 ade:	cf 91       	pop	r28
 ae0:	08 95       	ret

00000ae2 <LCD_vInit>:
 ae2:	81 e4       	ldi	r24, 0x41	; 65
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	64 e0       	ldi	r22, 0x04	; 4
 ae8:	70 e0       	ldi	r23, 0x00	; 0
 aea:	41 e0       	ldi	r20, 0x01	; 1
 aec:	50 e0       	ldi	r21, 0x00	; 0
 aee:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 af2:	81 e4       	ldi	r24, 0x41	; 65
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	65 e0       	ldi	r22, 0x05	; 5
 af8:	70 e0       	ldi	r23, 0x00	; 0
 afa:	41 e0       	ldi	r20, 0x01	; 1
 afc:	50 e0       	ldi	r21, 0x00	; 0
 afe:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b02:	81 e4       	ldi	r24, 0x41	; 65
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	66 e0       	ldi	r22, 0x06	; 6
 b08:	70 e0       	ldi	r23, 0x00	; 0
 b0a:	41 e0       	ldi	r20, 0x01	; 1
 b0c:	50 e0       	ldi	r21, 0x00	; 0
 b0e:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b12:	81 e4       	ldi	r24, 0x41	; 65
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	67 e0       	ldi	r22, 0x07	; 7
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	41 e0       	ldi	r20, 0x01	; 1
 b1c:	50 e0       	ldi	r21, 0x00	; 0
 b1e:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b22:	82 e4       	ldi	r24, 0x42	; 66
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	60 e0       	ldi	r22, 0x00	; 0
 b28:	70 e0       	ldi	r23, 0x00	; 0
 b2a:	41 e0       	ldi	r20, 0x01	; 1
 b2c:	50 e0       	ldi	r21, 0x00	; 0
 b2e:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b32:	82 e4       	ldi	r24, 0x42	; 66
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	62 e0       	ldi	r22, 0x02	; 2
 b38:	70 e0       	ldi	r23, 0x00	; 0
 b3a:	41 e0       	ldi	r20, 0x01	; 1
 b3c:	50 e0       	ldi	r21, 0x00	; 0
 b3e:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b42:	82 e4       	ldi	r24, 0x42	; 66
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	61 e0       	ldi	r22, 0x01	; 1
 b48:	70 e0       	ldi	r23, 0x00	; 0
 b4a:	41 e0       	ldi	r20, 0x01	; 1
 b4c:	50 e0       	ldi	r21, 0x00	; 0
 b4e:	0e 94 77 01 	call	0x2ee	; 0x2ee <DIO_vSetPinDir>
 b52:	82 e4       	ldi	r24, 0x42	; 66
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	61 e0       	ldi	r22, 0x01	; 1
 b58:	70 e0       	ldi	r23, 0x00	; 0
 b5a:	40 e0       	ldi	r20, 0x00	; 0
 b5c:	50 e0       	ldi	r21, 0x00	; 0
 b5e:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 b62:	82 e0       	ldi	r24, 0x02	; 2
 b64:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 b68:	83 ec       	ldi	r24, 0xC3	; 195
 b6a:	99 e0       	ldi	r25, 0x09	; 9
 b6c:	01 97       	sbiw	r24, 0x01	; 1
 b6e:	f1 f7       	brne	.-4      	; 0xb6c <LCD_vInit+0x8a>
 b70:	00 c0       	rjmp	.+0      	; 0xb72 <LCD_vInit+0x90>
 b72:	00 00       	nop
 b74:	88 e2       	ldi	r24, 0x28	; 40
 b76:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 b7a:	89 ef       	ldi	r24, 0xF9	; 249
 b7c:	90 e0       	ldi	r25, 0x00	; 0
 b7e:	01 97       	sbiw	r24, 0x01	; 1
 b80:	f1 f7       	brne	.-4      	; 0xb7e <LCD_vInit+0x9c>
 b82:	00 c0       	rjmp	.+0      	; 0xb84 <LCD_vInit+0xa2>
 b84:	00 00       	nop
 b86:	8e e0       	ldi	r24, 0x0E	; 14
 b88:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 b8c:	89 ef       	ldi	r24, 0xF9	; 249
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	01 97       	sbiw	r24, 0x01	; 1
 b92:	f1 f7       	brne	.-4      	; 0xb90 <LCD_vInit+0xae>
 b94:	00 c0       	rjmp	.+0      	; 0xb96 <LCD_vInit+0xb4>
 b96:	00 00       	nop
 b98:	81 e0       	ldi	r24, 0x01	; 1
 b9a:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 b9e:	83 ec       	ldi	r24, 0xC3	; 195
 ba0:	99 e0       	ldi	r25, 0x09	; 9
 ba2:	01 97       	sbiw	r24, 0x01	; 1
 ba4:	f1 f7       	brne	.-4      	; 0xba2 <LCD_vInit+0xc0>
 ba6:	00 c0       	rjmp	.+0      	; 0xba8 <LCD_vInit+0xc6>
 ba8:	00 00       	nop
 baa:	86 e0       	ldi	r24, 0x06	; 6
 bac:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 bb0:	89 ef       	ldi	r24, 0xF9	; 249
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	01 97       	sbiw	r24, 0x01	; 1
 bb6:	f1 f7       	brne	.-4      	; 0xbb4 <LCD_vInit+0xd2>
 bb8:	00 c0       	rjmp	.+0      	; 0xbba <LCD_vInit+0xd8>
 bba:	00 00       	nop
 bbc:	08 95       	ret

00000bbe <LCD_vSend_char>:
 bbe:	cf 93       	push	r28
 bc0:	c8 2f       	mov	r28, r24
 bc2:	68 2f       	mov	r22, r24
 bc4:	62 95       	swap	r22
 bc6:	6f 70       	andi	r22, 0x0F	; 15
 bc8:	81 e4       	ldi	r24, 0x41	; 65
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	70 e0       	ldi	r23, 0x00	; 0
 bce:	0e 94 cf 03 	call	0x79e	; 0x79e <DIO_vWriteHighNibble>
 bd2:	82 e4       	ldi	r24, 0x42	; 66
 bd4:	90 e0       	ldi	r25, 0x00	; 0
 bd6:	62 e0       	ldi	r22, 0x02	; 2
 bd8:	70 e0       	ldi	r23, 0x00	; 0
 bda:	41 e0       	ldi	r20, 0x01	; 1
 bdc:	50 e0       	ldi	r21, 0x00	; 0
 bde:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 be2:	0e 94 28 05 	call	0xa50	; 0xa50 <peekaboo>
 be6:	81 e4       	ldi	r24, 0x41	; 65
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	6c 2f       	mov	r22, r28
 bec:	70 e0       	ldi	r23, 0x00	; 0
 bee:	0e 94 cf 03 	call	0x79e	; 0x79e <DIO_vWriteHighNibble>
 bf2:	82 e4       	ldi	r24, 0x42	; 66
 bf4:	90 e0       	ldi	r25, 0x00	; 0
 bf6:	62 e0       	ldi	r22, 0x02	; 2
 bf8:	70 e0       	ldi	r23, 0x00	; 0
 bfa:	41 e0       	ldi	r20, 0x01	; 1
 bfc:	50 e0       	ldi	r21, 0x00	; 0
 bfe:	0e 94 08 02 	call	0x410	; 0x410 <DIO_vWrite>
 c02:	0e 94 28 05 	call	0xa50	; 0xa50 <peekaboo>
 c06:	cf 91       	pop	r28
 c08:	08 95       	ret

00000c0a <LCD_vSend_string>:
 c0a:	cf 93       	push	r28
 c0c:	df 93       	push	r29
 c0e:	ec 01       	movw	r28, r24
 c10:	88 81       	ld	r24, Y
 c12:	88 23       	and	r24, r24
 c14:	31 f0       	breq	.+12     	; 0xc22 <LCD_vSend_string+0x18>
 c16:	21 96       	adiw	r28, 0x01	; 1
 c18:	0e 94 df 05 	call	0xbbe	; 0xbbe <LCD_vSend_char>
 c1c:	89 91       	ld	r24, Y+
 c1e:	88 23       	and	r24, r24
 c20:	d9 f7       	brne	.-10     	; 0xc18 <LCD_vSend_string+0xe>
 c22:	df 91       	pop	r29
 c24:	cf 91       	pop	r28
 c26:	08 95       	ret

00000c28 <LCD_clearscreen>:
 c28:	81 e0       	ldi	r24, 0x01	; 1
 c2a:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 c2e:	83 ec       	ldi	r24, 0xC3	; 195
 c30:	99 e0       	ldi	r25, 0x09	; 9
 c32:	01 97       	sbiw	r24, 0x01	; 1
 c34:	f1 f7       	brne	.-4      	; 0xc32 <LCD_clearscreen+0xa>
 c36:	00 c0       	rjmp	.+0      	; 0xc38 <LCD_clearscreen+0x10>
 c38:	00 00       	nop
 c3a:	08 95       	ret

00000c3c <LCD_movecursor>:
 c3c:	81 30       	cpi	r24, 0x01	; 1
 c3e:	19 f4       	brne	.+6      	; 0xc46 <LCD_movecursor+0xa>
 c40:	86 2f       	mov	r24, r22
 c42:	81 58       	subi	r24, 0x81	; 129
 c44:	06 c0       	rjmp	.+12     	; 0xc52 <LCD_movecursor+0x16>
 c46:	82 30       	cpi	r24, 0x02	; 2
 c48:	19 f4       	brne	.+6      	; 0xc50 <LCD_movecursor+0x14>
 c4a:	86 2f       	mov	r24, r22
 c4c:	81 54       	subi	r24, 0x41	; 65
 c4e:	01 c0       	rjmp	.+2      	; 0xc52 <LCD_movecursor+0x16>
 c50:	80 e8       	ldi	r24, 0x80	; 128
 c52:	0e 94 45 05 	call	0xa8a	; 0xa8a <LCD_vSend_cmd>
 c56:	89 ef       	ldi	r24, 0xF9	; 249
 c58:	90 e0       	ldi	r25, 0x00	; 0
 c5a:	01 97       	sbiw	r24, 0x01	; 1
 c5c:	f1 f7       	brne	.-4      	; 0xc5a <LCD_movecursor+0x1e>
 c5e:	00 c0       	rjmp	.+0      	; 0xc60 <LCD_movecursor+0x24>
 c60:	00 00       	nop
 c62:	08 95       	ret

00000c64 <__divmodhi4>:
 c64:	97 fb       	bst	r25, 7
 c66:	09 2e       	mov	r0, r25
 c68:	07 26       	eor	r0, r23
 c6a:	0a d0       	rcall	.+20     	; 0xc80 <__divmodhi4_neg1>
 c6c:	77 fd       	sbrc	r23, 7
 c6e:	04 d0       	rcall	.+8      	; 0xc78 <__divmodhi4_neg2>
 c70:	0c d0       	rcall	.+24     	; 0xc8a <__udivmodhi4>
 c72:	06 d0       	rcall	.+12     	; 0xc80 <__divmodhi4_neg1>
 c74:	00 20       	and	r0, r0
 c76:	1a f4       	brpl	.+6      	; 0xc7e <__divmodhi4_exit>

00000c78 <__divmodhi4_neg2>:
 c78:	70 95       	com	r23
 c7a:	61 95       	neg	r22
 c7c:	7f 4f       	sbci	r23, 0xFF	; 255

00000c7e <__divmodhi4_exit>:
 c7e:	08 95       	ret

00000c80 <__divmodhi4_neg1>:
 c80:	f6 f7       	brtc	.-4      	; 0xc7e <__divmodhi4_exit>
 c82:	90 95       	com	r25
 c84:	81 95       	neg	r24
 c86:	9f 4f       	sbci	r25, 0xFF	; 255
 c88:	08 95       	ret

00000c8a <__udivmodhi4>:
 c8a:	aa 1b       	sub	r26, r26
 c8c:	bb 1b       	sub	r27, r27
 c8e:	51 e1       	ldi	r21, 0x11	; 17
 c90:	07 c0       	rjmp	.+14     	; 0xca0 <__udivmodhi4_ep>

00000c92 <__udivmodhi4_loop>:
 c92:	aa 1f       	adc	r26, r26
 c94:	bb 1f       	adc	r27, r27
 c96:	a6 17       	cp	r26, r22
 c98:	b7 07       	cpc	r27, r23
 c9a:	10 f0       	brcs	.+4      	; 0xca0 <__udivmodhi4_ep>
 c9c:	a6 1b       	sub	r26, r22
 c9e:	b7 0b       	sbc	r27, r23

00000ca0 <__udivmodhi4_ep>:
 ca0:	88 1f       	adc	r24, r24
 ca2:	99 1f       	adc	r25, r25
 ca4:	5a 95       	dec	r21
 ca6:	a9 f7       	brne	.-22     	; 0xc92 <__udivmodhi4_loop>
 ca8:	80 95       	com	r24
 caa:	90 95       	com	r25
 cac:	bc 01       	movw	r22, r24
 cae:	cd 01       	movw	r24, r26
 cb0:	08 95       	ret

00000cb2 <_exit>:
 cb2:	f8 94       	cli

00000cb4 <__stop_program>:
 cb4:	ff cf       	rjmp	.-2      	; 0xcb4 <__stop_program>
